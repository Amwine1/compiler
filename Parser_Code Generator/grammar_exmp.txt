-----------------------------------------------------------------------------------------------------------------------------------
ELIMINATING LEFT RECURSION FOR THE GRAMMAR:

Terminals = a,b,c,d,f
Non-terminals = S,A

Grammar:
S -> Aa
S -> b
A -> Ac
A -> Sd
A -> f

~

ELIMINATING LEFT FACTORING FOR THE GRAMMAR:

Terminals = i,t,e,a,b
Non-terminals = S,E

Grammar:
S -> iEtS
S -> iEtSeS
S -> a
E -> b

~

-----------------------------------------------------------------------------------------------------------------------------------
CHECKING LL1 WORKS:

Terminals = +,*,(,),d
Non-terminals = S,E,T,F,R,W

Grammar:
S -> E
E -> TR
R -> +TR
R -> @
T -> FW
W -> *FW
W -> @
F -> (E)
F -> d


===INPUT = d+d*d

-----------------------------------------------------------------------------------------------------------------------------------
CHECKING SLR WORKS:

Terminals = +,*,(,),d
Non-terminals = S,E,T,F

Grammar:
S -> E
E -> E+T
E -> T
T -> T*F
T -> F
F -> (E)
F -> d


===INPUT = d*d+d

-----------------------------------------------------------------------------------------------------------------------------------
COMPARING LL1 AND SLR GRAMMARs:

1.  GRAMMAR 1 (CANNOT BE PARSED BY LL1):

        Terminals = +,*,(,),d
        Non-terminals = S,E,T,F

        Grammar:
        S -> E
        E -> E+T
        E -> T
        T -> T*F
        T -> F
        F -> (E)
        F -> d

2.  GRAMMAR 2 (CANNOT BE PARSED BY LL1 AND SLR, IT HAS A SHIFT-REDUCE
CONFLICT):

        Terminals = o,i,y,0,1,(,)
        Non-terminals = S,E,I,W,P

        Grammar:
        S -> E
        E -> I
        E -> o
        I -> i(P)EW
        W -> yE
        W -> @
        P -> 0
        P -> 1

3.  GRAMMAR 3 (CANNOT BE PARSED BY LL1):

        Terminals = +,-,*,(,),d
        Non-terminals = S,E,T,O,M,F

        Grammar:
        S -> E
        E -> EOT
        E -> T
        O -> +
        O -> -
        T -> TMF
        T -> F
        M -> *
        F -> (E)
        F -> d

4.  GRAMMAR 4 (CANNOT BE PARSED BY LL1):

        Terminals = a,b,c,d,f
        Non-terminals = S,A

        Grammar:
        S -> Aa
        S -> b
        A -> Ac
        A -> Sd
        A -> f

5.  GRAMMAR 5 (LL1 TABLE MUCH SMALLER THAN SLR TABLE):

        Terminals = c,d
        Non-terminals = S,A,C

        Grammar:
        S -> A
        A -> CC
        C -> cC
        C -> d

6.  GRAMMAR 6 (CANNOT BE PARSED BY BOTH LL1 AND SLR, IT HAS A SHIFT-REDUCE
CONFLICT):

        Terminals = *,d,=
        Non-terminals = S,L,R,A

        Grammar:
        S -> A
        A -> L=R
        A -> R
        L -> *R
        L -> d
        R -> L

